# CircleCI 2.1 configuration file
# Check https://circleci.com/docs/2.0/configuration-reference/ for more details
#
# The following environment variables must be set in the circleci project UI
# - $DOCKER_USER -> dockerhub user with permissions to repo
# - $DOCKER_PASS -> password for dockerhub user
#
# Define YAML anchors
var_1: &load_docker_image
  run:
    name: Load Docker image layer cache
    command: |
      docker load -i "/home/circleci/workspace/caches/${CIRCLE_PROJECT_REPONAME}-ci.tar" || true

var_2: &attach_workspace
  attach_workspace:
    at: /home/circleci/workspace/

# Start circleci configuration
version: 2.1
orbs:
  anchore: anchore/anchore-engine@1.6.4
commands:
  run_tox_tests:
    description: Pass path to tests to be run with tox
    parameters:
      test_type:
        type: string
    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-dependencies-{{ .Branch }}-{{ checksum "requirements.txt" }}
    - run:
        name: run tests
        command: make test-{{ test_type }}
    - save_cache:
        paths:
          - ~/project/.tox
        key: v1-dependencies-{{ .Branch }}-{{ checksum "requirements.txt" }}
    - store_artifacts:
        path: .tox/tox.log

jobs:
  unit_tests:
    docker:
    - image: circleci/python:3.6
    steps:
    - run_tox_tests:
        test_type: "unit"
  
  integration_tests:
    docker:
      - image: circleci/python:3.6
      - image: anchore/test-infra-minio:latest
        command:
          - server
          - /data
      - image: anchore/test-infra-swift:latest
      - image: circleci/postgres:9.6
    environment:
      ANCHORE_TEST_S3_ACCESS_KEY: "9EB92C7W61YPFQ6QLDOU"
      ANCHORE_TEST_S3_SECRET_KEY: "TuHo2UbBx+amD3YiCeidy+R3q82MPTPiyd+dlW+s"
      ANCHORE_TEST_S3_URL: "http://localhost:9000"
      ANCHORE_TEST_S3_BUCKET: "testarchivebucket"

      ANCHORE_TEST_SWIFT_AUTH_URL: "http://localhost:8080/auth/v1.0"
      ANCHORE_TEST_SWIFT_KEY: "testing"
      ANCHORE_TEST_SWIFT_USER: "test:tester"
      ANCHORE_TEST_SWIFT_CONTAINER: "testarchive"

      ANCHORE_TEST_DB_URL: "postgresql+pg8000://postgres@localhost:5432/circle_test"
      ANCHORE_TEST_DB_USER: "postgres"
      ANCHORE_TEST_DB_PASS: "postgres"
      ANCHORE_TEST_DATA_ENV_DIR: "test/data/test_data_env"
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - run_tox_tests:
          test_type: "integration"

  build:
    docker:
    - image: docker:stable
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        name: build Docker image
        command: make build
    - run:
        name: Run compose tests
        command: make test-compose
    - run:
        name: Save Docker image
        command: |
          rm -rf /home/circleci/workspace/caches/
          mkdir -p /home/circleci/workspace/caches/
          docker save -o "/home/circleci/workspace/caches/${CIRCLE_PROJECT_REPONAME}-ci.tar" "${IMAGE_NAME}:ci"
    - persist_to_workspace:
        root: /home/circleci/workspace/
        paths:
        - caches/*

  push_dockerhub:
    docker:
    - image: docker:stable
    steps:
    - setup_remote_docker
    - <<: *attach_workspace
    - <<: *load_docker_image
    - run:
        name: Push to Dockerhub
        command: |
          echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
          make push

  trigger_downstream:
    docker:
      - image: anchore/test-infra:latest
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
    - run:
        name: Trigger release candidate builds
        command: |
          source ci_utils.sh
          trigger_artifact_build anchore-engine

workflows:
  default_workflow:
    jobs:
    - unit_tests
    - integration_tests
    - build:
        context: dockerhub
        filters:
          branches:
            only:
            - 'master'
            - '0.6'
            - '0.5'
            - '0.4'
            - '0.3'
            - '0.2'
    - push_dockerhub:
        context: dockerhub
        requires:
        - build
        - unit_tests
        - integration_tests
    - trigger_downstream:
        context: release_candidates
        requires:
        - push_dockerhub
    - anchore/image_scan:
        context: dockerhub
        requires:
        - push_dockerhub
        image_name: 'anchore/anchore-engine-dev:${CIRCLE_SHA1}'
        private_registry: true
        timeout: '2000'
